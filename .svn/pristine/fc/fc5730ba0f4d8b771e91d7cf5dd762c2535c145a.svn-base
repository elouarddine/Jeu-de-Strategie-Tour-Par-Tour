<!DOCTYPE HTML>
<!-- NewPage -->
<html lang="fr">
<head>
<!-- Generated by javadoc (11.0.25) on Mon Dec 02 12:51:10 CET 2024 -->
<title>Case</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta name="dc.created" content="2024-12-02">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
<link rel="stylesheet" type="text/css" href="../jquery/jquery-ui.min.css" title="Style">
<link rel="stylesheet" type="text/css" href="../jquery-ui.overrides.css" title="Style">
<script type="text/javascript" src="../script.js"></script>
<script type="text/javascript" src="../jquery/jszip/dist/jszip.min.js"></script>
<script type="text/javascript" src="../jquery/jszip-utils/dist/jszip-utils.min.js"></script>
<!--[if IE]>
<script type="text/javascript" src="../jquery/jszip-utils/dist/jszip-utils-ie.min.js"></script>
<![endif]-->
<script type="text/javascript" src="../jquery/jquery-3.7.1.min.js"></script>
<script type="text/javascript" src="../jquery/jquery-ui.min.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="Case";
        }
    }
    catch(err) {
    }
//-->
var data = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10,"i9":10,"i10":10,"i11":10,"i12":10,"i13":10,"i14":10,"i15":10,"i16":10,"i17":10};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
var pathtoroot = "../";
var useModuleDirectories = true;
loadScripts(document, 'script');</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<header role="banner">
<nav role="navigation">
<div class="fixedNav">
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a id="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../index.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-all.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses.html">All&nbsp;Classes</a></li>
</ul>
<ul class="navListSearch">
<li><label for="search">SEARCH:</label>
<input type="text" id="search" value="search" disabled="disabled">
<input type="reset" id="reset" value="reset" disabled="disabled">
</li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
</div>
<div class="navPadding">&nbsp;</div>
<script type="text/javascript"><!--
$('.navPadding').css('padding-top', $('.fixedNav').css("height"));
//-->
</script>
</nav>
</header>
<!-- ======== START OF CLASS DATA ======== -->
<main role="main">
<div class="header">
<div class="subTitle"><span class="packageLabelInType">Package</span>&nbsp;<a href="package-summary.html">model</a></div>
<h2 title="Class Case" class="title">Class Case</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>model.Case</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>Direct Known Subclasses:</dt>
<dd><code><a href="Pastille.html" title="class in model">Pastille</a></code></dd>
</dl>
<hr>
<pre>public class <span class="typeNameLabel">Case</span>
extends java.lang.Object</pre>
<div class="block">Classe représentant une case dans la grille de jeu.
 <p>
 Une case peut contenir un combattant, un explosif, une pastille d'énergie, ou être un mur.
 Elle est définie par sa position sur la grille et peut fournir des informations sur son état.</div>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<section>
<ul class="blockList">
<li class="blockList"><a id="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Constructor</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr class="altColor">
<th class="colConstructorName" scope="row"><code><span class="memberNameLink"><a href="#%3Cinit%3E(model.Position,model.Grille)">Case</a></span>&#8203;(<a href="Position.html" title="class in model">Position</a>&nbsp;position,
    <a href="Grille.html" title="class in model">Grille</a>&nbsp;grille)</code></th>
<td class="colLast">
<div class="block">Constructeur de la classe Case.</div>
</td>
</tr>
</table>
</li>
</ul>
</section>
<!-- ========== METHOD SUMMARY =========== -->
<section>
<ul class="blockList">
<li class="blockList"><a id="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Method</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#ajouterExplosif(model.Explosif)">ajouterExplosif</a></span>&#8203;(<a href="Explosif.html" title="class in model">Explosif</a>&nbsp;explosif)</code></th>
<td class="colLast">
<div class="block">Ajoute un explosif sur la case.</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#contientPastilleEnergie()">contientPastilleEnergie</a></span>()</code></th>
<td class="colLast">
<div class="block">Vérifie si la case contient une pastille d'énergie.</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code><a href="Case.html" title="class in model">Case</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#copierAvecFiltrage(model.Combattant)">copierAvecFiltrage</a></span>&#8203;(<a href="Combattant.html" title="class in model">Combattant</a>&nbsp;combattant)</code></th>
<td class="colLast">
<div class="block">Crée une copie de la case avec filtrage des informations en fonction du combattant.</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#estOccupee(boolean)">estOccupee</a></span>&#8203;(boolean&nbsp;inclureExplosifs)</code></th>
<td class="colLast">
<div class="block">Vérifie si la case est occupée.</div>
</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#estUnMur()">estUnMur</a></span>()</code></th>
<td class="colLast">
<div class="block">Vérifie si la case est un mur.</div>
</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>java.util.List&lt;<a href="Case.html" title="class in model">Case</a>&gt;</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getCasesVoisines()">getCasesVoisines</a></span>()</code></th>
<td class="colLast">
<div class="block">Obtient la liste des cases voisines de cette case.</div>
</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code><a href="Explosif.html" title="class in model">Explosif</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getExplosif()">getExplosif</a></span>()</code></th>
<td class="colLast">
<div class="block">Obtient l'explosif présent sur la case.</div>
</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code><a href="Grille.html" title="class in model">Grille</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getGrille()">getGrille</a></span>()</code></th>
<td class="colLast">
<div class="block">Obtient la grille de jeu.</div>
</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code><a href="Combattant.html" title="class in model">Combattant</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getOccupant()">getOccupant</a></span>()</code></th>
<td class="colLast">
<div class="block">Obtient le combattant occupant actuellement la case.</div>
</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code><a href="Pastille.html" title="class in model">Pastille</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getPastilleEnergie()">getPastilleEnergie</a></span>()</code></th>
<td class="colLast">
<div class="block">Obtient la pastille d'énergie présente sur la case.</div>
</td>
</tr>
<tr id="i10" class="altColor">
<td class="colFirst"><code><a href="Position.html" title="class in model">Position</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getPosition()">getPosition</a></span>()</code></th>
<td class="colLast">
<div class="block">Obtient la position de la case sur la grille.</div>
</td>
</tr>
<tr id="i11" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#retirerExplosif()">retirerExplosif</a></span>()</code></th>
<td class="colLast">
<div class="block">Retire l'explosif présent sur la case.</div>
</td>
</tr>
<tr id="i12" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setContientPastilleEnergie(boolean)">setContientPastilleEnergie</a></span>&#8203;(boolean&nbsp;contientPastilleEnergie)</code></th>
<td class="colLast">
<div class="block">Définit si la case contient une pastille d'énergie.</div>
</td>
</tr>
<tr id="i13" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setContientPastilleEnergie(model.Pastille)">setContientPastilleEnergie</a></span>&#8203;(<a href="Pastille.html" title="class in model">Pastille</a>&nbsp;pastilleEnergie)</code></th>
<td class="colLast">
<div class="block">Définit la pastille d'énergie présente sur la case.</div>
</td>
</tr>
<tr id="i14" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setEstMur(boolean)">setEstMur</a></span>&#8203;(boolean&nbsp;estMur)</code></th>
<td class="colLast">
<div class="block">Définit si la case est un mur.</div>
</td>
</tr>
<tr id="i15" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setExplosif(model.Explosif)">setExplosif</a></span>&#8203;(<a href="Explosif.html" title="class in model">Explosif</a>&nbsp;explosif)</code></th>
<td class="colLast">
<div class="block">Définit l'explosif présent sur la case.</div>
</td>
</tr>
<tr id="i16" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setOccupant(model.Combattant)">setOccupant</a></span>&#8203;(<a href="Combattant.html" title="class in model">Combattant</a>&nbsp;occupant)</code></th>
<td class="colLast">
<div class="block">Définit le combattant occupant la case.</div>
</td>
</tr>
<tr id="i17" class="rowColor">
<td class="colFirst"><code>java.lang.String</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#toString()">toString</a></span>()</code></th>
<td class="colLast">
<div class="block">Retourne une représentation textuelle de la case.</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a id="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<section>
<ul class="blockList">
<li class="blockList"><a id="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a id="&lt;init&gt;(model.Position,model.Grille)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>Case</h4>
<pre>public&nbsp;Case&#8203;(<a href="Position.html" title="class in model">Position</a>&nbsp;position,
            <a href="Grille.html" title="class in model">Grille</a>&nbsp;grille)</pre>
<div class="block">Constructeur de la classe Case.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>position</code> - La position de la case sur la grille.</dd>
<dd><code>grille</code> - La grille de jeu à laquelle appartient la case.</dd>
</dl>
</li>
</ul>
</li>
</ul>
</section>
<!-- ============ METHOD DETAIL ========== -->
<section>
<ul class="blockList">
<li class="blockList"><a id="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a id="getGrille()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getGrille</h4>
<pre class="methodSignature">public&nbsp;<a href="Grille.html" title="class in model">Grille</a>&nbsp;getGrille()</pre>
<div class="block">Obtient la grille de jeu.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>La grille de jeu.</dd>
</dl>
</li>
</ul>
<a id="getPosition()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getPosition</h4>
<pre class="methodSignature">public&nbsp;<a href="Position.html" title="class in model">Position</a>&nbsp;getPosition()</pre>
<div class="block">Obtient la position de la case sur la grille.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>La position de la case.</dd>
</dl>
</li>
</ul>
<a id="getOccupant()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getOccupant</h4>
<pre class="methodSignature">public&nbsp;<a href="Combattant.html" title="class in model">Combattant</a>&nbsp;getOccupant()</pre>
<div class="block">Obtient le combattant occupant actuellement la case.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>Le combattant occupant la case, ou null s'il n'y en a pas.</dd>
</dl>
</li>
</ul>
<a id="setOccupant(model.Combattant)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setOccupant</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;setOccupant&#8203;(<a href="Combattant.html" title="class in model">Combattant</a>&nbsp;occupant)</pre>
<div class="block">Définit le combattant occupant la case.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>occupant</code> - Le combattant à placer sur la case.</dd>
</dl>
</li>
</ul>
<a id="ajouterExplosif(model.Explosif)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>ajouterExplosif</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;ajouterExplosif&#8203;(<a href="Explosif.html" title="class in model">Explosif</a>&nbsp;explosif)</pre>
<div class="block">Ajoute un explosif sur la case.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>explosif</code> - L'explosif à ajouter.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.IllegalStateException</code> - si la case contient déjà un explosif.</dd>
</dl>
</li>
</ul>
<a id="retirerExplosif()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>retirerExplosif</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;retirerExplosif()</pre>
<div class="block">Retire l'explosif présent sur la case.</div>
</li>
</ul>
<a id="getExplosif()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getExplosif</h4>
<pre class="methodSignature">public&nbsp;<a href="Explosif.html" title="class in model">Explosif</a>&nbsp;getExplosif()</pre>
<div class="block">Obtient l'explosif présent sur la case.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>L'explosif présent sur la case, ou null s'il n'y en a pas.</dd>
</dl>
</li>
</ul>
<a id="setExplosif(model.Explosif)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setExplosif</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;setExplosif&#8203;(<a href="Explosif.html" title="class in model">Explosif</a>&nbsp;explosif)</pre>
<div class="block">Définit l'explosif présent sur la case.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>explosif</code> - L'explosif à placer sur la case.</dd>
</dl>
</li>
</ul>
<a id="getPastilleEnergie()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getPastilleEnergie</h4>
<pre class="methodSignature">public&nbsp;<a href="Pastille.html" title="class in model">Pastille</a>&nbsp;getPastilleEnergie()</pre>
<div class="block">Obtient la pastille d'énergie présente sur la case.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>La pastille d'énergie présente sur la case, ou null s'il n'y en a pas.</dd>
</dl>
</li>
</ul>
<a id="setContientPastilleEnergie(model.Pastille)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setContientPastilleEnergie</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;setContientPastilleEnergie&#8203;(<a href="Pastille.html" title="class in model">Pastille</a>&nbsp;pastilleEnergie)</pre>
<div class="block">Définit la pastille d'énergie présente sur la case.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>pastilleEnergie</code> - La pastille d'énergie à placer sur la case.</dd>
</dl>
</li>
</ul>
<a id="contientPastilleEnergie()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>contientPastilleEnergie</h4>
<pre class="methodSignature">public&nbsp;boolean&nbsp;contientPastilleEnergie()</pre>
<div class="block">Vérifie si la case contient une pastille d'énergie.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true si la case contient une pastille d'énergie, false sinon.</dd>
</dl>
</li>
</ul>
<a id="setContientPastilleEnergie(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setContientPastilleEnergie</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;setContientPastilleEnergie&#8203;(boolean&nbsp;contientPastilleEnergie)</pre>
<div class="block">Définit si la case contient une pastille d'énergie.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>contientPastilleEnergie</code> - true si la case contient une pastille d'énergie, false sinon.</dd>
</dl>
</li>
</ul>
<a id="estOccupee(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>estOccupee</h4>
<pre class="methodSignature">public&nbsp;boolean&nbsp;estOccupee&#8203;(boolean&nbsp;inclureExplosifs)</pre>
<div class="block">Vérifie si la case est occupée.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>inclureExplosifs</code> - true pour considérer les explosifs comme occupant la case.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true si la case est occupée (par un mur, un combattant ou un explosif selon le paramètre), false sinon.</dd>
</dl>
</li>
</ul>
<a id="estUnMur()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>estUnMur</h4>
<pre class="methodSignature">public&nbsp;boolean&nbsp;estUnMur()</pre>
<div class="block">Vérifie si la case est un mur.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true si la case est un mur, false sinon.</dd>
</dl>
</li>
</ul>
<a id="setEstMur(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setEstMur</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;setEstMur&#8203;(boolean&nbsp;estMur)</pre>
<div class="block">Définit si la case est un mur.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>estMur</code> - true si la case est un mur, false sinon.</dd>
</dl>
</li>
</ul>
<a id="getCasesVoisines()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getCasesVoisines</h4>
<pre class="methodSignature">public&nbsp;java.util.List&lt;<a href="Case.html" title="class in model">Case</a>&gt;&nbsp;getCasesVoisines()</pre>
<div class="block">Obtient la liste des cases voisines de cette case.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>La liste des cases voisines.</dd>
</dl>
</li>
</ul>
<a id="copierAvecFiltrage(model.Combattant)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>copierAvecFiltrage</h4>
<pre class="methodSignature">public&nbsp;<a href="Case.html" title="class in model">Case</a>&nbsp;copierAvecFiltrage&#8203;(<a href="Combattant.html" title="class in model">Combattant</a>&nbsp;combattant)</pre>
<div class="block">Crée une copie de la case avec filtrage des informations en fonction du combattant.
 Les explosifs non visibles pour le combattant ne seront pas inclus dans la copie.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>combattant</code> - Le combattant pour lequel la copie est créée.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>Une copie de la case avec filtrage des informations.</dd>
</dl>
</li>
</ul>
<a id="toString()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>toString</h4>
<pre class="methodSignature">public&nbsp;java.lang.String&nbsp;toString()</pre>
<div class="block">Retourne une représentation textuelle de la case.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>toString</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>Un caractère représentant l'état de la case.</dd>
</dl>
</li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
</div>
</main>
<!-- ========= END OF CLASS DATA ========= -->
<footer role="contentinfo">
<nav role="navigation">
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a id="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../index.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-all.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li>Nested&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</nav>
</footer>
</body>
</html>
