<!DOCTYPE HTML>
<!-- NewPage -->
<html lang="fr">
<head>
<!-- Generated by javadoc (11.0.25) on Mon Dec 02 12:51:10 CET 2024 -->
<title>Combattant</title>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<meta name="dc.created" content="2024-12-02">
<link rel="stylesheet" type="text/css" href="../stylesheet.css" title="Style">
<link rel="stylesheet" type="text/css" href="../jquery/jquery-ui.min.css" title="Style">
<link rel="stylesheet" type="text/css" href="../jquery-ui.overrides.css" title="Style">
<script type="text/javascript" src="../script.js"></script>
<script type="text/javascript" src="../jquery/jszip/dist/jszip.min.js"></script>
<script type="text/javascript" src="../jquery/jszip-utils/dist/jszip-utils.min.js"></script>
<!--[if IE]>
<script type="text/javascript" src="../jquery/jszip-utils/dist/jszip-utils-ie.min.js"></script>
<![endif]-->
<script type="text/javascript" src="../jquery/jquery-3.7.1.min.js"></script>
<script type="text/javascript" src="../jquery/jquery-ui.min.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="Combattant";
        }
    }
    catch(err) {
    }
//-->
var data = {"i0":10,"i1":10,"i2":10,"i3":10,"i4":10,"i5":10,"i6":10,"i7":10,"i8":10,"i9":10,"i10":10,"i11":10,"i12":10,"i13":10,"i14":10,"i15":10,"i16":10,"i17":10,"i18":10,"i19":10,"i20":10,"i21":10,"i22":10,"i23":10,"i24":10};
var tabs = {65535:["t0","All Methods"],2:["t2","Instance Methods"],8:["t4","Concrete Methods"]};
var altColor = "altColor";
var rowColor = "rowColor";
var tableTab = "tableTab";
var activeTableTab = "activeTableTab";
var pathtoroot = "../";
var useModuleDirectories = true;
loadScripts(document, 'script');</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<header role="banner">
<nav role="navigation">
<div class="fixedNav">
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a id="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../index.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-all.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList" id="allclasses_navbar_top">
<li><a href="../allclasses.html">All&nbsp;Classes</a></li>
</ul>
<ul class="navListSearch">
<li><label for="search">SEARCH:</label>
<input type="text" id="search" value="search" disabled="disabled">
<input type="reset" id="reset" value="reset" disabled="disabled">
</li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
</div>
<div class="navPadding">&nbsp;</div>
<script type="text/javascript"><!--
$('.navPadding').css('padding-top', $('.fixedNav').css("height"));
//-->
</script>
</nav>
</header>
<!-- ======== START OF CLASS DATA ======== -->
<main role="main">
<div class="header">
<div class="subTitle"><span class="packageLabelInType">Package</span>&nbsp;<a href="package-summary.html">model</a></div>
<h2 title="Class Combattant" class="title">Class Combattant</h2>
</div>
<div class="contentContainer">
<ul class="inheritance">
<li>java.lang.Object</li>
<li>
<ul class="inheritance">
<li>model.Combattant</li>
</ul>
</li>
</ul>
<div class="description">
<ul class="blockList">
<li class="blockList">
<dl>
<dt>All Implemented Interfaces:</dt>
<dd><code><a href="CombattantActions.html" title="interface in model">CombattantActions</a></code></dd>
</dl>
<dl>
<dt>Direct Known Subclasses:</dt>
<dd><code><a href="combattantFactory/Engineer.html" title="class in model.combattantFactory">Engineer</a></code>, <code><a href="combattantFactory/Guerrier.html" title="class in model.combattantFactory">Guerrier</a></code>, <code><a href="combattantFactory/Saboteur.html" title="class in model.combattantFactory">Saboteur</a></code>, <code><a href="combattantFactory/Sniper.html" title="class in model.combattantFactory">Sniper</a></code>, <code><a href="combattantFactory/Tank.html" title="class in model.combattantFactory">Tank</a></code>, <code><a href="combattantFactory/Tireur.html" title="class in model.combattantFactory">Tireur</a></code></dd>
</dl>
<hr>
<pre>public abstract class <span class="typeNameLabel">Combattant</span>
extends java.lang.Object
implements <a href="CombattantActions.html" title="interface in model">CombattantActions</a></pre>
<div class="block">Classe abstraite représentant un combattant dans le jeu.
 <p>
 Un combattant possède un nom, une énergie, une position, un bouclier, des armes, des explosifs, etc.
 Il peut effectuer diverses actions comme se déplacer, tirer, activer son bouclier, etc.</div>
</li>
</ul>
</div>
<div class="summary">
<ul class="blockList">
<li class="blockList">
<!-- ======== NESTED CLASS SUMMARY ======== -->
<section>
<ul class="blockList">
<li class="blockList"><a id="nested.class.summary">
<!--   -->
</a>
<h3>Nested Class Summary</h3>
<table class="memberSummary">
<caption><span>Nested Classes</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Class</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr class="altColor">
<td class="colFirst"><code>static class&nbsp;</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="Combattant.PossessionType.html" title="enum in model">Combattant.PossessionType</a></span></code></th>
<td class="colLast">
<div class="block">Enumération des types de possessions qu'un combattant peut avoir.</div>
</td>
</tr>
</table>
</li>
</ul>
</section>
<!-- ======== CONSTRUCTOR SUMMARY ======== -->
<section>
<ul class="blockList">
<li class="blockList"><a id="constructor.summary">
<!--   -->
</a>
<h3>Constructor Summary</h3>
<table class="memberSummary">
<caption><span>Constructors</span><span class="tabEnd">&nbsp;</span></caption>
<tr>
<th class="colFirst" scope="col">Constructor</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr class="altColor">
<th class="colConstructorName" scope="row"><code><span class="memberNameLink"><a href="#%3Cinit%3E(java.lang.String,model.Position,utils.strategyMessage.MessageHandler,model.Grille)">Combattant</a></span>&#8203;(java.lang.String&nbsp;nom,
          <a href="Position.html" title="class in model">Position</a>&nbsp;position,
          <a href="../utils/strategyMessage/MessageHandler.html" title="interface in utils.strategyMessage">MessageHandler</a>&nbsp;messageHandler,
          <a href="Grille.html" title="class in model">Grille</a>&nbsp;grille)</code></th>
<td class="colLast">
<div class="block">Constructeur de la classe Combattant.</div>
</td>
</tr>
</table>
</li>
</ul>
</section>
<!-- ========== METHOD SUMMARY =========== -->
<section>
<ul class="blockList">
<li class="blockList"><a id="method.summary">
<!--   -->
</a>
<h3>Method Summary</h3>
<table class="memberSummary">
<caption><span id="t0" class="activeTableTab"><span>All Methods</span><span class="tabEnd">&nbsp;</span></span><span id="t2" class="tableTab"><span><a href="javascript:show(2);">Instance Methods</a></span><span class="tabEnd">&nbsp;</span></span><span id="t4" class="tableTab"><span><a href="javascript:show(8);">Concrete Methods</a></span><span class="tabEnd">&nbsp;</span></span></caption>
<tr>
<th class="colFirst" scope="col">Modifier and Type</th>
<th class="colSecond" scope="col">Method</th>
<th class="colLast" scope="col">Description</th>
</tr>
<tr id="i0" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#activerBouclier()">activerBouclier</a></span>()</code></th>
<td class="colLast">
<div class="block">Active le bouclier du combattant si les conditions le permettent.</div>
</td>
</tr>
<tr id="i1" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#ajouterArme(model.Arme)">ajouterArme</a></span>&#8203;(<a href="Arme.html" title="class in model">Arme</a>&nbsp;arme)</code></th>
<td class="colLast">
<div class="block">Ajoute une arme à l'inventaire du combattant.</div>
</td>
</tr>
<tr id="i2" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#ajouterExplosif(model.Explosif)">ajouterExplosif</a></span>&#8203;(<a href="Explosif.html" title="class in model">Explosif</a>&nbsp;explosif)</code></th>
<td class="colLast">
<div class="block">Ajoute un explosif à l'inventaire du combattant.</div>
</td>
</tr>
<tr id="i3" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#attendre()">attendre</a></span>()</code></th>
<td class="colLast">
<div class="block">Le combattant choisit d'attendre pour économiser de l'énergie.</div>
</td>
</tr>
<tr id="i4" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#deplacer(model.Case)">deplacer</a></span>&#8203;(<a href="Case.html" title="class in model">Case</a>&nbsp;caseCible)</code></th>
<td class="colLast">
<div class="block">Déplace le combattant vers une case cible si les conditions le permettent.</div>
</td>
</tr>
<tr id="i5" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#deposerBombe(model.Case)">deposerBombe</a></span>&#8203;(<a href="Case.html" title="class in model">Case</a>&nbsp;cible)</code></th>
<td class="colLast">
<div class="block">Dépose une bombe sur une case cible si le combattant en possède.</div>
</td>
</tr>
<tr id="i6" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#deposerMine(model.Case)">deposerMine</a></span>&#8203;(<a href="Case.html" title="class in model">Case</a>&nbsp;cible)</code></th>
<td class="colLast">
<div class="block">Dépose une mine sur une case cible si le combattant en possède.</div>
</td>
</tr>
<tr id="i7" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#estBouclierActif()">estBouclierActif</a></span>()</code></th>
<td class="colLast">
<div class="block">Vérifie si le bouclier est actif.</div>
</td>
</tr>
<tr id="i8" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#estEnVie()">estEnVie</a></span>()</code></th>
<td class="colLast">
<div class="block">Vérifie si le combattant est encore en vie (énergie > 0).</div>
</td>
</tr>
<tr id="i9" class="rowColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#estTireActif()">estTireActif</a></span>()</code></th>
<td class="colLast">
<div class="block">Vérifie si le tir est actif.</div>
</td>
</tr>
<tr id="i10" class="altColor">
<td class="colFirst"><code>java.util.List&lt;<a href="Arme.html" title="class in model">Arme</a>&gt;</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getArmes()">getArmes</a></span>()</code></th>
<td class="colLast">
<div class="block">Obtient la liste des armes du combattant.</div>
</td>
</tr>
<tr id="i11" class="rowColor">
<td class="colFirst"><code>int</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getEnergie()">getEnergie</a></span>()</code></th>
<td class="colLast">
<div class="block">Obtient l'énergie actuelle du combattant.</div>
</td>
</tr>
<tr id="i12" class="altColor">
<td class="colFirst"><code>java.util.List&lt;<a href="Explosif.html" title="class in model">Explosif</a>&gt;</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getExplosifs()">getExplosifs</a></span>()</code></th>
<td class="colLast">
<div class="block">Obtient la liste des explosifs du combattant.</div>
</td>
</tr>
<tr id="i13" class="rowColor">
<td class="colFirst"><code><a href="../utils/strategyMessage/MessageHandler.html" title="interface in utils.strategyMessage">MessageHandler</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getMessageHandler()">getMessageHandler</a></span>()</code></th>
<td class="colLast">
<div class="block">Obtient le gestionnaire de messages.</div>
</td>
</tr>
<tr id="i14" class="altColor">
<td class="colFirst"><code>java.lang.String</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getNom()">getNom</a></span>()</code></th>
<td class="colLast">
<div class="block">Obtient le nom du combattant.</div>
</td>
</tr>
<tr id="i15" class="rowColor">
<td class="colFirst"><code><a href="Position.html" title="class in model">Position</a></code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#getPosition()">getPosition</a></span>()</code></th>
<td class="colLast">
<div class="block">Obtient la position actuelle du combattant.</div>
</td>
</tr>
<tr id="i16" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#perdreEnergie(int)">perdreEnergie</a></span>&#8203;(int&nbsp;valeur)</code></th>
<td class="colLast">
<div class="block">Réduit l'énergie du combattant d'une valeur spécifiée.</div>
</td>
</tr>
<tr id="i17" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setBouclierActif(boolean)">setBouclierActif</a></span>&#8203;(boolean&nbsp;bouclierActif)</code></th>
<td class="colLast">
<div class="block">Active ou désactive le bouclier.</div>
</td>
</tr>
<tr id="i18" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setEnergie(int)">setEnergie</a></span>&#8203;(int&nbsp;energie)</code></th>
<td class="colLast">
<div class="block">Définit l'énergie du combattant.</div>
</td>
</tr>
<tr id="i19" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setMessageHandler(utils.strategyMessage.MessageHandler)">setMessageHandler</a></span>&#8203;(<a href="../utils/strategyMessage/MessageHandler.html" title="interface in utils.strategyMessage">MessageHandler</a>&nbsp;messageHandler)</code></th>
<td class="colLast">
<div class="block">Définit le gestionnaire de messages.</div>
</td>
</tr>
<tr id="i20" class="altColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setPosition(model.Position)">setPosition</a></span>&#8203;(<a href="Position.html" title="class in model">Position</a>&nbsp;position)</code></th>
<td class="colLast">
<div class="block">Définit la position du combattant.</div>
</td>
</tr>
<tr id="i21" class="rowColor">
<td class="colFirst"><code>void</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#setTireActif(boolean)">setTireActif</a></span>&#8203;(boolean&nbsp;tireActif)</code></th>
<td class="colLast">
<div class="block">Active ou désactive le tir.</div>
</td>
</tr>
<tr id="i22" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#tirer(model.Arme,model.Case,model.Direction)">tirer</a></span>&#8203;(<a href="Arme.html" title="class in model">Arme</a>&nbsp;arme,
     <a href="Case.html" title="class in model">Case</a>&nbsp;caseCible,
     <a href="Direction.html" title="enum in model">Direction</a>&nbsp;direction)</code></th>
<td class="colLast">
<div class="block">Effectue un tir avec une arme vers une direction donnée en ciblant une case.</div>
</td>
</tr>
<tr id="i23" class="rowColor">
<td class="colFirst"><code>java.lang.String</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#toString()">toString</a></span>()</code></th>
<td class="colLast">
<div class="block">Retourne une représentation textuelle du combattant.</div>
</td>
</tr>
<tr id="i24" class="altColor">
<td class="colFirst"><code>boolean</code></td>
<th class="colSecond" scope="row"><code><span class="memberNameLink"><a href="#verifierElimination()">verifierElimination</a></span>()</code></th>
<td class="colLast">
<div class="block">Vérifie si le combattant est éliminé (plus d'énergie).</div>
</td>
</tr>
</table>
<ul class="blockList">
<li class="blockList"><a id="methods.inherited.from.class.java.lang.Object">
<!--   -->
</a>
<h3>Methods inherited from class&nbsp;java.lang.Object</h3>
<code>clone, equals, finalize, getClass, hashCode, notify, notifyAll, wait, wait, wait</code></li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
<div class="details">
<ul class="blockList">
<li class="blockList">
<!-- ========= CONSTRUCTOR DETAIL ======== -->
<section>
<ul class="blockList">
<li class="blockList"><a id="constructor.detail">
<!--   -->
</a>
<h3>Constructor Detail</h3>
<a id="&lt;init&gt;(java.lang.String,model.Position,utils.strategyMessage.MessageHandler,model.Grille)">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>Combattant</h4>
<pre>public&nbsp;Combattant&#8203;(java.lang.String&nbsp;nom,
                  <a href="Position.html" title="class in model">Position</a>&nbsp;position,
                  <a href="../utils/strategyMessage/MessageHandler.html" title="interface in utils.strategyMessage">MessageHandler</a>&nbsp;messageHandler,
                  <a href="Grille.html" title="class in model">Grille</a>&nbsp;grille)</pre>
<div class="block">Constructeur de la classe Combattant.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>nom</code> - Le nom du combattant.</dd>
<dd><code>position</code> - La position initiale du combattant sur la grille.</dd>
<dd><code>messageHandler</code> - Le gestionnaire de messages pour afficher les messages du jeu.</dd>
<dd><code>grille</code> - La grille de jeu où évolue le combattant.</dd>
</dl>
</li>
</ul>
</li>
</ul>
</section>
<!-- ============ METHOD DETAIL ========== -->
<section>
<ul class="blockList">
<li class="blockList"><a id="method.detail">
<!--   -->
</a>
<h3>Method Detail</h3>
<a id="getNom()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getNom</h4>
<pre class="methodSignature">public&nbsp;java.lang.String&nbsp;getNom()</pre>
<div class="block">Obtient le nom du combattant.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>Le nom du combattant.</dd>
</dl>
</li>
</ul>
<a id="getEnergie()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getEnergie</h4>
<pre class="methodSignature">public&nbsp;int&nbsp;getEnergie()</pre>
<div class="block">Obtient l'énergie actuelle du combattant.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>L'énergie du combattant.</dd>
</dl>
</li>
</ul>
<a id="setEnergie(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setEnergie</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;setEnergie&#8203;(int&nbsp;energie)</pre>
<div class="block">Définit l'énergie du combattant.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>energie</code> - La nouvelle valeur de l'énergie.</dd>
</dl>
</li>
</ul>
<a id="getPosition()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getPosition</h4>
<pre class="methodSignature">public&nbsp;<a href="Position.html" title="class in model">Position</a>&nbsp;getPosition()</pre>
<div class="block">Obtient la position actuelle du combattant.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>La position du combattant.</dd>
</dl>
</li>
</ul>
<a id="setPosition(model.Position)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setPosition</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;setPosition&#8203;(<a href="Position.html" title="class in model">Position</a>&nbsp;position)</pre>
<div class="block">Définit la position du combattant.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>position</code> - La nouvelle position du combattant.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.IllegalArgumentException</code> - si la position est nulle.</dd>
</dl>
</li>
</ul>
<a id="estBouclierActif()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>estBouclierActif</h4>
<pre class="methodSignature">public&nbsp;boolean&nbsp;estBouclierActif()</pre>
<div class="block">Vérifie si le bouclier est actif.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true si le bouclier est actif, false sinon.</dd>
</dl>
</li>
</ul>
<a id="setBouclierActif(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setBouclierActif</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;setBouclierActif&#8203;(boolean&nbsp;bouclierActif)</pre>
<div class="block">Active ou désactive le bouclier.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>bouclierActif</code> - true pour activer le bouclier, false pour le désactiver.</dd>
</dl>
</li>
</ul>
<a id="estTireActif()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>estTireActif</h4>
<pre class="methodSignature">public&nbsp;boolean&nbsp;estTireActif()</pre>
<div class="block">Vérifie si le tir est actif.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true si le tir est actif, false sinon.</dd>
</dl>
</li>
</ul>
<a id="setTireActif(boolean)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setTireActif</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;setTireActif&#8203;(boolean&nbsp;tireActif)</pre>
<div class="block">Active ou désactive le tir.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>tireActif</code> - true pour activer le tir, false pour le désactiver.</dd>
</dl>
</li>
</ul>
<a id="getMessageHandler()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getMessageHandler</h4>
<pre class="methodSignature">public&nbsp;<a href="../utils/strategyMessage/MessageHandler.html" title="interface in utils.strategyMessage">MessageHandler</a>&nbsp;getMessageHandler()</pre>
<div class="block">Obtient le gestionnaire de messages.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>Le gestionnaire de messages.</dd>
</dl>
</li>
</ul>
<a id="setMessageHandler(utils.strategyMessage.MessageHandler)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>setMessageHandler</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;setMessageHandler&#8203;(<a href="../utils/strategyMessage/MessageHandler.html" title="interface in utils.strategyMessage">MessageHandler</a>&nbsp;messageHandler)</pre>
<div class="block">Définit le gestionnaire de messages.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>messageHandler</code> - Le nouveau gestionnaire de messages.</dd>
</dl>
</li>
</ul>
<a id="getArmes()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getArmes</h4>
<pre class="methodSignature">public&nbsp;java.util.List&lt;<a href="Arme.html" title="class in model">Arme</a>&gt;&nbsp;getArmes()</pre>
<div class="block">Obtient la liste des armes du combattant.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>La liste des armes.</dd>
</dl>
</li>
</ul>
<a id="getExplosifs()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>getExplosifs</h4>
<pre class="methodSignature">public&nbsp;java.util.List&lt;<a href="Explosif.html" title="class in model">Explosif</a>&gt;&nbsp;getExplosifs()</pre>
<div class="block">Obtient la liste des explosifs du combattant.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>La liste des explosifs.</dd>
</dl>
</li>
</ul>
<a id="perdreEnergie(int)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>perdreEnergie</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;perdreEnergie&#8203;(int&nbsp;valeur)</pre>
<div class="block">Réduit l'énergie du combattant d'une valeur spécifiée.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>valeur</code> - La quantité d'énergie à soustraire.</dd>
</dl>
</li>
</ul>
<a id="estEnVie()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>estEnVie</h4>
<pre class="methodSignature">public&nbsp;boolean&nbsp;estEnVie()</pre>
<div class="block">Vérifie si le combattant est encore en vie (énergie > 0).</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true si le combattant est en vie, false sinon.</dd>
</dl>
</li>
</ul>
<a id="verifierElimination()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>verifierElimination</h4>
<pre class="methodSignature">public&nbsp;boolean&nbsp;verifierElimination()</pre>
<div class="block">Vérifie si le combattant est éliminé (plus d'énergie).
 Si le combattant est éliminé, il libère sa case sur la grille.</div>
<dl>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true si le combattant est éliminé, false sinon.</dd>
</dl>
</li>
</ul>
<a id="ajouterArme(model.Arme)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>ajouterArme</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;ajouterArme&#8203;(<a href="Arme.html" title="class in model">Arme</a>&nbsp;arme)</pre>
<div class="block">Ajoute une arme à l'inventaire du combattant.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>arme</code> - L'arme à ajouter.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.IllegalArgumentException</code> - si l'arme est nulle.</dd>
</dl>
</li>
</ul>
<a id="ajouterExplosif(model.Explosif)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>ajouterExplosif</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;ajouterExplosif&#8203;(<a href="Explosif.html" title="class in model">Explosif</a>&nbsp;explosif)</pre>
<div class="block">Ajoute un explosif à l'inventaire du combattant.</div>
<dl>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>explosif</code> - L'explosif à ajouter.</dd>
<dt><span class="throwsLabel">Throws:</span></dt>
<dd><code>java.lang.IllegalArgumentException</code> - si l'explosif est nul.</dd>
</dl>
</li>
</ul>
<a id="deplacer(model.Case)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>deplacer</h4>
<pre class="methodSignature">public&nbsp;boolean&nbsp;deplacer&#8203;(<a href="Case.html" title="class in model">Case</a>&nbsp;caseCible)</pre>
<div class="block">Déplace le combattant vers une case cible si les conditions le permettent.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="CombattantActions.html#deplacer(model.Case)">deplacer</a></code>&nbsp;in interface&nbsp;<code><a href="CombattantActions.html" title="interface in model">CombattantActions</a></code></dd>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>caseCible</code> - La case cible vers laquelle se déplacer.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true si le déplacement a réussi, false sinon.</dd>
</dl>
</li>
</ul>
<a id="deposerMine(model.Case)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>deposerMine</h4>
<pre class="methodSignature">public&nbsp;boolean&nbsp;deposerMine&#8203;(<a href="Case.html" title="class in model">Case</a>&nbsp;cible)</pre>
<div class="block">Dépose une mine sur une case cible si le combattant en possède.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="CombattantActions.html#deposerMine(model.Case)">deposerMine</a></code>&nbsp;in interface&nbsp;<code><a href="CombattantActions.html" title="interface in model">CombattantActions</a></code></dd>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>cible</code> - La case sur laquelle déposer la mine.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true si la mine a été déposée avec succès, false sinon.</dd>
</dl>
</li>
</ul>
<a id="deposerBombe(model.Case)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>deposerBombe</h4>
<pre class="methodSignature">public&nbsp;boolean&nbsp;deposerBombe&#8203;(<a href="Case.html" title="class in model">Case</a>&nbsp;cible)</pre>
<div class="block">Dépose une bombe sur une case cible si le combattant en possède.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="CombattantActions.html#deposerBombe(model.Case)">deposerBombe</a></code>&nbsp;in interface&nbsp;<code><a href="CombattantActions.html" title="interface in model">CombattantActions</a></code></dd>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>cible</code> - La case sur laquelle déposer la bombe.</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true si la bombe a été déposée avec succès, false sinon.</dd>
</dl>
</li>
</ul>
<a id="tirer(model.Arme,model.Case,model.Direction)">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>tirer</h4>
<pre class="methodSignature">public&nbsp;boolean&nbsp;tirer&#8203;(<a href="Arme.html" title="class in model">Arme</a>&nbsp;arme,
                     <a href="Case.html" title="class in model">Case</a>&nbsp;caseCible,
                     <a href="Direction.html" title="enum in model">Direction</a>&nbsp;direction)</pre>
<div class="block">Effectue un tir avec une arme vers une direction donnée en ciblant une case.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="CombattantActions.html#tirer(model.Arme,model.Case,model.Direction)">tirer</a></code>&nbsp;in interface&nbsp;<code><a href="CombattantActions.html" title="interface in model">CombattantActions</a></code></dd>
<dt><span class="paramLabel">Parameters:</span></dt>
<dd><code>arme</code> - L'arme utilisée pour tirer.</dd>
<dd><code>caseCible</code> - La case ciblée par le tir.</dd>
<dd><code>direction</code> - La direction du tir (HORIZONTAL ou VERTICAL).</dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true si le tir a été effectué avec succès, false sinon.</dd>
</dl>
</li>
</ul>
<a id="activerBouclier()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>activerBouclier</h4>
<pre class="methodSignature">public&nbsp;boolean&nbsp;activerBouclier()</pre>
<div class="block">Active le bouclier du combattant si les conditions le permettent.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="CombattantActions.html#activerBouclier()">activerBouclier</a></code>&nbsp;in interface&nbsp;<code><a href="CombattantActions.html" title="interface in model">CombattantActions</a></code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>true si le bouclier a été activé avec succès, false sinon.</dd>
</dl>
</li>
</ul>
<a id="attendre()">
<!--   -->
</a>
<ul class="blockList">
<li class="blockList">
<h4>attendre</h4>
<pre class="methodSignature">public&nbsp;void&nbsp;attendre()</pre>
<div class="block">Le combattant choisit d'attendre pour économiser de l'énergie.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Specified by:</span></dt>
<dd><code><a href="CombattantActions.html#attendre()">attendre</a></code>&nbsp;in interface&nbsp;<code><a href="CombattantActions.html" title="interface in model">CombattantActions</a></code></dd>
</dl>
</li>
</ul>
<a id="toString()">
<!--   -->
</a>
<ul class="blockListLast">
<li class="blockList">
<h4>toString</h4>
<pre class="methodSignature">public&nbsp;java.lang.String&nbsp;toString()</pre>
<div class="block">Retourne une représentation textuelle du combattant.</div>
<dl>
<dt><span class="overrideSpecifyLabel">Overrides:</span></dt>
<dd><code>toString</code>&nbsp;in class&nbsp;<code>java.lang.Object</code></dd>
<dt><span class="returnLabel">Returns:</span></dt>
<dd>"€" si le bouclier est actif, "!" sinon.</dd>
</dl>
</li>
</ul>
</li>
</ul>
</section>
</li>
</ul>
</div>
</div>
</main>
<!-- ========= END OF CLASS DATA ========= -->
<footer role="contentinfo">
<nav role="navigation">
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a id="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a id="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="../index.html">Overview</a></li>
<li><a href="package-summary.html">Package</a></li>
<li class="navBarCell1Rev">Class</li>
<li><a href="package-tree.html">Tree</a></li>
<li><a href="../deprecated-list.html">Deprecated</a></li>
<li><a href="../index-all.html">Index</a></li>
<li><a href="../help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="../allclasses.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
</div>
<div>
<ul class="subNavList">
<li>Summary:&nbsp;</li>
<li><a href="#nested.class.summary">Nested</a>&nbsp;|&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.summary">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.summary">Method</a></li>
</ul>
<ul class="subNavList">
<li>Detail:&nbsp;</li>
<li>Field&nbsp;|&nbsp;</li>
<li><a href="#constructor.detail">Constr</a>&nbsp;|&nbsp;</li>
<li><a href="#method.detail">Method</a></li>
</ul>
</div>
<a id="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</nav>
</footer>
</body>
</html>
